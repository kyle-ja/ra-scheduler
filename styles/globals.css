@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;


@layer base {
  :root {
    --primary-blue: #001E44;
    --primary-black: #111111;
    --background-white: #ffffff;
    --error-red: #e3342f;
  }

  body {
    font-family: 'Poppins', Arial, Helvetica, sans-serif;
    background: var(--background-white);
    color: var(--primary-black);
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: 'Poppins', Arial, Helvetica, sans-serif;
    font-weight: 700;
    color: var(--primary-black);
  }
}

@layer components {
  button {
    font-family: 'Poppins', Arial, Helvetica, sans-serif;
    border-radius: 0.5rem;
    background: var(--primary-blue);
    color: #fff;
    font-weight: 600;
    transition: background 0.2s;
  }
  button:hover:not(:disabled) {
    background: #1E407C;
  }
  button:disabled {
    background: #b0b0b0;
    cursor: not-allowed;
  }

  input, select, textarea {
    font-family: 'Poppins', Arial, Helvetica, sans-serif;
    border-radius: 0.5rem;
    border: 1px solid #d1d5db;
    padding: 0.5rem 1rem;
    transition: border 0.2s, box-shadow 0.2s;
  }
  input:focus, select:focus, textarea:focus {
    border-color: var(--primary-blue);
    box-shadow: 0 0 0 2px var(--primary-blue);
    outline: none;
  }

  table {
    font-family: 'Poppins', Arial, Helvetica, sans-serif;
    background: #fff;
    border-radius: 0.75rem;
    overflow: hidden;
  }
  th, td {
    padding: 1rem;
  }
  th {
    background: var(--primary-blue);
    color: #fff;
    font-weight: 600;
  }
  tr {
    border-bottom: 1px solid #e5e7eb;
  }
  tr:hover {
    background: #f0f8ff;
  }

  .main-content {
    max-width: 1274px;
    margin: 0 auto;
  }
}

@layer utilities {

  .react-calendar {
    width: 100% !important;
    max-width: 100% !important;
    font-size: 1.1rem;
    background: #fff;
    border-radius: 0.75rem;
    overflow: hidden;
    border: 1px solid #e2e8f0;
  }

  /* Calendar Navigation */
  .react-calendar__navigation button {
    color: var(--primary-blue) !important;
    min-width: 44px;
    background: none;
    font-size: 16px;
    margin-top: 8px;
  }
  .react-calendar__navigation button:enabled:hover,
  .react-calendar__navigation button:enabled:focus {
    background-color: #f8f8f8;
  }
  .react-calendar__navigation button[disabled] {
    background-color: #f0f0f0;
  }

  /* Calendar Month View Weekdays (MON, TUE, etc.) */
  .react-calendar__month-view__weekdays {
    text-align: center;
    text-transform: uppercase;
    font-weight: bold;
    font-size: 0.75em;
    color: var(--primary-blue) !important;
  }
  .react-calendar__month-view__weekdays__weekday {
    padding: 0.5em;
  }
  .react-calendar__month-view__weekdays__weekday abbr {
    text-decoration: none;
    border-bottom: none;
  }

  /* == General Calendar Tile Structure == */
  .react-calendar__tile {
    position: relative !important; 
    display: flex !important;
    flex-direction: column !important;
    justify-content: flex-start !important; 
    align-items: center !important;
    min-height: 70px !important; 
    padding: 4px !important;     
    box-sizing: border-box !important;
    border: 1px solid #eee !important; 
  }

  /* Ensure default react-calendar day number is hidden (placed last for max specificity) */
  .react-calendar__tile abbr {
    display: none !important;
  }

  /* == Styling for IN-RANGE and SCHEDULABLE days == */
  .blue-tile-in-range,
  .react-calendar__month-view__days__day--neighboringMonth.blue-tile-in-range {
    background-color: var(--primary-blue) !important; 
    color: #fff !important; 
    opacity: 1 !important; 
  }

  .blue-tile-in-range abbr,
  .react-calendar__month-view__days__day--neighboringMonth.blue-tile-in-range abbr {
    color: #fff !important;
    opacity: 1 !important; 
    font-weight: normal !important; 
  }

  .blue-tile-in-range .employee-name-display,
  .react-calendar__month-view__days__day--neighboringMonth.blue-tile-in-range .employee-name-display {
    color: #fff !important;
    font-size: 0.75em;
    text-align: center;
    width: 100%;
    margin-top: auto; 
    padding-bottom: 2px;
  }

  /* == Styling for OUT-OF-RANGE or NON-SCHEDULABLE days == */
  .white-tile-out-of-range,
  .react-calendar__month-view__days__day--neighboringMonth.white-tile-out-of-range {
    background-color: #fff !important;
    color: #ccc !important; 
    opacity: 1 !important; 
  }

  .white-tile-out-of-range abbr,
  .react-calendar__month-view__days__day--neighboringMonth.white-tile-out-of-range abbr {
    color: #ccc !important;
    opacity: 1 !important;
    font-weight: normal !important;
  }

  .white-tile-out-of-range .employee-name-display,
  .react-calendar__month-view__days__day--neighboringMonth.white-tile-out-of-range .employee-name-display {
    display: none !important;
  }

  /* == Overrides for react-calendar default behaviors for specific states like "today" == */

  /* Today's date - ensuring our blue/white styling takes precedence if it's in range and schedulable */
  .react-calendar__tile--now.blue-tile-in-range,
  .react-calendar__tile--now.react-calendar__month-view__days__day--neighboringMonth.blue-tile-in-range {
    background-color: var(--primary-blue) !important; 
  }
  .react-calendar__tile--now.blue-tile-in-range abbr,
  .react-calendar__tile--now.react-calendar__month-view__days__day--neighboringMonth.blue-tile-in-range abbr {
    color: #fff !important; 
    font-weight: bold !important; 
  }

  /* If today is out of range or not schedulable, it should be white with gray text */
  .react-calendar__tile--now.white-tile-out-of-range,
  .react-calendar__tile--now.react-calendar__month-view__days__day--neighboringMonth.white-tile-out-of-range {
    background-color: #fff !important;
  }
  .react-calendar__tile--now.white-tile-out-of-range abbr,
  .react-calendar__tile--now.react-calendar__month-view__days__day--neighboringMonth.white-tile-out-of-range abbr {
     color: #ccc !important;
     font-weight: bold !important; 
  }

  /* General override for neighboring month day opacity if not covered by specific classes above */
  /* This ensures they are not dimmed if our classes aren't applied for some reason, but specific classes should handle it */
  .react-calendar__month-view__days__day--neighboringMonth {
    opacity: 1 !important; /* Default to full opacity */
  }

  .feedback-success {
    background: #e6f7ff;
    color: var(--primary-blue);
    border-radius: 0.5rem;
    padding: 1rem;
  }
  .feedback-error {
    background: #ffeaea;
    color: var(--error-red);
    border-radius: 0.5rem;
    padding: 1rem;
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* Calendar Navigation: arrows and month label */
  .react-calendar__navigation__label {
    color: var(--primary-blue) !important;
    font-weight: 600;
    font-size: 1.2em;
    background: none !important;
  }
  .react-calendar__navigation button {
    color: var(--primary-blue) !important;
    font-size: 1.5em;
    background: none !important;
  }

  /* Assigned day: dark blue background, white text */
  .assigned-day {
    background-color: var(--primary-blue) !important;
    color: #fff !important;
    border-color: var(--primary-blue) !important;
  }
  .assigned-day abbr,
  .assigned-day .employee-name-on-tile {
    color: #fff !important;
  }

  /* In-range days: always dark blue with white text, even if neighboring month */
  .in-range-day,
  .react-calendar__month-view__days__day--neighboringMonth.in-range-day {
    background: var(--primary-blue) !important;
    color: #fff !important;
    border-color: var(--primary-blue) !important;
    opacity: 1 !important;
  }
  .in-range-day abbr,
  .react-calendar__month-view__days__day--neighboringMonth.in-range-day abbr {
    color: #fff !important;
    opacity: 1 !important;
  }
  .in-range-day .employee-name-on-tile,
  .react-calendar__month-view__days__day--neighboringMonth.in-range-day .employee-name-on-tile {
    color: #fff !important;
    opacity: 1 !important;
  }

  /* Out-of-range days: always white with gray number, even if neighboring month */
  .out-of-range-day,
  .react-calendar__month-view__days__day--neighboringMonth.out-of-range-day {
    background: #fff !important;
    color: #cccccc !important;
    opacity: 1 !important;
  }
  .out-of-range-day abbr,
  .react-calendar__month-view__days__day--neighboringMonth.out-of-range-day abbr {
    color: #cccccc !important;
    opacity: 1 !important;
  }
  .out-of-range-day .employee-name-on-tile,
  .react-calendar__month-view__days__day--neighboringMonth.out-of-range-day .employee-name-on-tile {
    display: none !important;
  }

  /* Remove/override any default opacity for neighboring month days */
  .react-calendar__month-view__days__day--neighboringMonth {
    opacity: 1 !important;
  }
}

/* FINAL OVERRIDE: Hide react-calendar default day number */
.react-calendar__tile abbr {
  display: none !important;
  visibility: hidden !important;
  pointer-events: none !important;
  height: 0 !important;
  width: 0 !important;
  position: absolute !important;
  left: -9999px !important;
}
